// <auto-generated />
using System;
using ATM_lab.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ATM_lab.Migrations
{
    [DbContext(typeof(ATMcontext))]
    [Migration("20200101184843_Update Seed")]
    partial class UpdateSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ATM_lab.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Blocked");

                    b.Property<string>("CardNumber")
                        .IsRequired();

                    b.Property<int>("FailedLogins");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("ATM_lab.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CardId");

                    b.Property<string>("CardNumber")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("ATM_lab.Models.Operation", b =>
                {
                    b.HasOne("ATM_lab.Models.Card")
                        .WithMany("Operations")
                        .HasForeignKey("CardId");
                });
#pragma warning restore 612, 618
        }
    }
}
